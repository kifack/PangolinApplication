{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/dashboard/friend-details/friend-details.component.ts","webpack:///src/app/components/dashboard/friend-details/friend-details.component.html","webpack:///src/app/components/friend/friend.component.ts","webpack:///src/app/components/friend/friend.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/friend.service.ts","webpack:///src/app/services/token.interceptor.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","DashboardComponent","friendService","router","user","getAllMyFriends","subscribe","data","friends","users","err","console","log","friend","deleteFriend","res","filter","fr","_id","FriendDetailsComponent","emit","deleteOneFriend","FriendComponent","flashMessage","authService","getAllUsers","it","friend_id","addFriend","success","show","cssClass","timeout","item","msg","HomeComponent","LoginComponent","validateService","email","password","isValidLogin","validateEmail","authenticateUser","storeUserData","token","navigate","loginUser","NavbarComponent","logout","ProfileComponent","getProfile","profile","isValideUpdate","updateUser","RegisterComponent","name","validateRegister","registerUser","AuthGuard","route","isLoggedIn","User","AuthService","http","ROOT_URL","headers","append","post","put","localStorage","setItem","JSON","stringify","authToken","getItem","get","clear","helper","loadToken","isTokenExpired","replace","parse","providedIn","FriendService","TokenInterceptor","auth","request","next","clone","setHeaders","Authorization","handle","ValidateService","undefined","re","test","age","race","food","family","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent }  from './components/home/home.component';\nimport { LoginComponent }  from './components/login/login.component';\nimport { RegisterComponent }  from './components/register/register.component';\nimport { DashboardComponent }  from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { FriendComponent } from './components/friend/friend.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n{ path:'',component:HomeComponent},\n{ path:'login',component:LoginComponent},\n{ path:'register',component:RegisterComponent},\n{ path:'dashboard',component:DashboardComponent,canActivate:[AuthGuard]},\n{ path:'profile',component:ProfileComponent,canActivate:[AuthGuard]},\n{ path:'friend',component:FriendComponent,canActivate:[AuthGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container\" style=\"margin-top: 20px;\">\r\n  <flash-messages></flash-messages>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { FriendService } from './services/friend.service';\nimport { TokenInterceptor } from './services/token.interceptor';\nimport { AuthGuard } from './guards/auth.guard';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule }  from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FriendComponent } from './components/friend/friend.component';\nimport { FriendDetailsComponent } from './components/dashboard/friend-details/friend-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    ProfileComponent,\n    HomeComponent,\n    FriendComponent,\n    FriendDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n   FlashMessagesModule.forRoot(),\n   HttpClientModule,\n  ],\n  providers: [ValidateService,AuthService,AuthGuard,FriendService,\n  {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FriendService } from '../../services/friend.service';\nimport { Router } from '@angular/router';\nimport {User } from '../../models/user.model'\nimport {Friend } from '../../models/friend.model'\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  friends:Array<Friend>;\n  user:User=new User();\n  constructor(private friendService:FriendService,private router:Router) { }\n\n  ngOnInit(): void {\n\n  \tthis.friendService.getAllMyFriends().subscribe((data : any) => {\n      this.user = data.user;\n      this.friends = data.users;\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n\n  }\n\n  deleteFriend(friend:Friend){\n    \n     this.friendService.deleteFriend(friend).subscribe(res => {\n      \n      this.friends=this.friends.filter(fr => fr._id!=friend._id);\n    });\n  }\n\n}\n","\n<div class=\"row\">\n\t<div class=\"col-md-9\">\n\t\t<h2 class=\"text-primary text-center\">Tous mes amis</h2 >\n\t\t\n\n\t\t<div class=\"row\">\n\t\t   <app-friend-details (deleteFriend)=\"deleteFriend($event)\" *ngFor=\"let friend of friends\" [friend]=\"friend\"></app-friend-details>\n\t\t</div>\n\n\n\t</div>\n\t<div class=\"col-md-3 mt-4\">\n\t\t\n\t\t<div class=\"list-group\">\n\t\t  <a href=\"#\" class=\"list-group-item list-group-item-action active\">\n\t\t   Nom:  {{ user.name }}\n\t\t  </a>\n\t\t  <a href=\"#\" class=\"list-group-item list-group-item-action\">Adresse mail: {{   user.email }}\n\t\t  </a>\n\t\t  <a href=\"#\" class=\"list-group-item list-group-item-action disabled\">Famille:{{   user.family }}\n\t\t  </a>\n\t\t  <a href=\"#\" class=\"list-group-item list-group-item-action disabled\">Age:<span class=\"badge badge-secondary\">{{   user.age }}</span>\n\t\t  </a>\n       </div>\n\t</div>\n</div>\n","import { Component, OnInit,Input,Output,EventEmitter } from '@angular/core';\nimport {Friend } from '../../../models/friend.model'\n\n@Component({\n  selector: 'app-friend-details',\n  templateUrl: './friend-details.component.html',\n  styleUrls: ['./friend-details.component.css']\n})\nexport class FriendDetailsComponent implements OnInit {\n\n  @Input() friend:Friend;\n  @Output() deleteFriend: EventEmitter<Friend> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  deleteOneFriend(friend){\n  \tthis.deleteFriend.emit(friend);\n  }\n\n}\n","<div class=\"col-md-6 my-2\" >\n\t<div class=\"card\" style=\"width: 18rem;\">\n\t\t\t \n\t\t\t  \n\t    <ul class=\"list-group list-group-flush\">\n\t\t\t    <li class=\"list-group-item\">Nom: {{friend.friend.name}}</li>\n\t\t\t    <li class=\"list-group-item\">Email: {{friend.friend.email}}</li>\n\t\t\t    <li class=\"list-group-item\">Famille: {{friend.friend.family}}</li>\n\t\t\t    <li class=\"list-group-item\">Age: {{friend.friend.age}}</li>\n\t\t\t    <li class=\"list-group-item\">Nourriture: {{friend.friend.food}}</li>\n\t\t\t    <li class=\"list-group-item\"><a (click)=\"deleteOneFriend(friend)\" class=\"card-link text-danger\" style=\"cursor: pointer;\">Supprimer</a></li>\n\t\t\t  </ul>\n\t\t\t  \n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FriendService } from '../../services/friend.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport {User } from '../../models/user.model'\n\n@Component({\n  selector: 'app-friend',\n  templateUrl: './friend.component.html',\n  styleUrls: ['./friend.component.css']\n})\nexport class FriendComponent implements OnInit {\n\n  users:Array<User>;\n  user:User=new User();\n  constructor(private friendService:FriendService,\n              private router:Router,\n              private flashMessage:  FlashMessagesService,\n              private authService:AuthService,) { }\n\n  ngOnInit(): void {\n\n  \tthis.authService.getAllUsers().subscribe((data : any) => {\n      this.user = data.user;\n      this.users = data.users;\n      this.users= this.users.filter((it) => it._id!=this.user._id);\n      console.log(data.users);\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n\n  }\n\n  addFriend(friend_id){\n  \tconst friend={\n  \t\tfriend:friend_id\n  \t};\n\n    this.friendService.addFriend(friend).subscribe((data :any) => {\n        if(data.success) {\n         this.flashMessage.show(\"Ami ajouté\", {cssClass: 'alert-success', timeout: 5000});\n         \n         this.users=this.users.filter((item) => item._id!= friend_id); \n        } else {\n          this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 5000});\n          \n        }\n    });\n     \n  }\n\n  \n}\n","<div>\n\t<h3 class=\"text-center my-3 text-primary\">Tous les Pangolins inscrits</h3>\n\t\t<div *ngIf=\"users\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-4\" *ngFor=\"let item of users\">\n\t\t\t\t\t <div class=\"card border-light mb-3\" style=\"max-width: 20rem;\">\n\t\t\t\t\t  <div class=\"card-header text-primary \">{{ item.name }}</div>\n\t\t\t\t\t  <div class=\"card-body\">\n\t\t\t\t\t    <!-- <h4 class=\"card-title \">Light card title</h4> -->\n\t\t\t\t\t    <p class=\"card-text\">{{ item.email }}</p>\n\t\t\t\t\t    <button class=\"btn btn-outline-primary\" (click)=\"addFriend(item._id)\">Ajouter à mes amis</button>\n\t\t\t\t\t \n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n  <h1>Application <span class=\"text-primary\" style=\"font-weight: bold;font-size: 50px;font-family: 'Rochester', cursive;\">Pangolin</span></h1>\n  <p class=\"lead\">Bienvenue sur le site de gestion du carnet d'adresse pour \"Pangolin\" </p>\n  <div>\n    <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">S'inscrire</a> <a class=\"btn btn-success ml-3\" [routerLink]=\"['/login']\">Se connecter</a>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n    <h3>Express Backend</h3>\n    <p>Technologies Node.js/Express utilisé pour organiser le modèle de données et les requetes dans la base de données</p>\n  </div>\n  <div class=\"col-md-4\">\n    <h3>Angular-CLI</h3>\n    <p>Angular-CLI pour generer des composants,services. Un serveur local et une compilation rapide</p>\n  </div>\n  <div class=\"col-md-4\">\n    <h3>JWT Tokens</h3>\n    <p>Moyen d'authentification des utilisateurs. Connexion et sauvegarde des données utilisateur</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService} from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  email:String;\n  password:String;\n  constructor(private validateService: ValidateService,\n  \t          private flashMessage:  FlashMessagesService,\n  \t          private authService: AuthService,\n                private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  loginUser(){\n\n  \t const user={\n  \t \temail:this.email,\n  \t \tpassword:this.password\n  \t };\n\n     if(!this.validateService.isValidLogin(user)){\n       this.flashMessage.show(\"Veuillez saisir le login et le mot de passe\",\n         {cssClass:'alert alert-danger',timeout:5000});\n       return false;\n     }\n\n     if(!this.validateService.validateEmail(user.email)) {\n    this.flashMessage.show('Entrez une adresse mail valide', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n  \t  this.authService.authenticateUser(user).subscribe((data :any) => {\n        if(data.success) {\n          this.authService.storeUserData(data.token, data.user);\n          this.flashMessage.show('Vous etes connecté', {cssClass: 'alert-success', timeout: 5000});\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 5000});\n          this.router.navigate(['/login']);\n        }\n    });\n  }\n\n}\n","<div class=\"row\">\n   <div class=\"col-md-6 mx-auto\">\n   \t  \n\t\t<h2 class=\"page-header text-center text-primary\">Connexion</h2>\n\t\t<form (submit)=\"loginUser()\" >\n\t\t  <div class=\"form-group\">\n\t\t    <label for=\"email\">Email</label>\n\t\t    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Entrez votre email\">\n\t\t  </div>\n\t\t  <div class=\"form-group\">\n\t\t    <label for=\"password\">Mot de passe</label>\n\t\t    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Entrez le mot de passe\">\n\t\t  </div>\n\t\t  <input type=\"submit\" class=\"btn btn-primary\" value=\"Se connecter\">\n\t\t</form>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private flashMessage:  FlashMessagesService,\n  \t          public authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  logoutuser(){\n     \n    this.authService.logout();\n    this.flashMessage.show('Vous etes déconnecté', {\n      cssClass: 'alert-success', timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"font-size: 15px;\">\n  <a class=\"navbar-brand text-primary\" routerLink=\"/\" style=\"font-weight: bold;font-size: 30px;font-family: 'Rochester', cursive;\">Pangolin</a>\n   <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor03\">\n    <ul class=\"navbar-nav mr-auto\">\n    \n         <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\n\t        <a class=\"nav-link\"  [routerLinkActive]=\"['active']\" routerLink=\"/dashboard\"><i class=\"fas fa-user-friends mr-2\"></i>Mes amis</a>\n\t       </li>  \n         <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\n          <a class=\"nav-link\"  [routerLinkActive]=\"['active']\" routerLink=\"/profile\"><i class=\"fas fa-user mr-2\"></i>Profile</a>\n         </li> \n         <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\n          <a class=\"nav-link\"  [routerLinkActive]=\"['active']\" routerLink=\"/friend\"><i class=\"fas fa-search mr-2\"></i>Trouver des Amis</a>\n         </li>  \n     \n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\">\n\t      <li *ngIf=\"!authService.isLoggedIn()\" class=\"nav-item\">\n\t        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" routerLink=\"/register\">S'inscrire</a>\n\t      </li>\n\t      <li *ngIf=\"!authService.isLoggedIn()\" class=\"nav-item\">\n\t        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" routerLink=\"/login\">Se connecter</a>\n\t      </li>\n         <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\n          <a class=\"nav-link\" [routerLinkActive]=\"['active']\"  routerLink=\"/profile\">{{authService.getUsername().name}}</a>\n        </li>\n         <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\n          <a class=\"nav-link\" [routerLinkActive]=\"['active']\" (click)=\"logoutuser()\" href=\"#\"> <i class=\"fas fa-sign-out-alt mr-2\"></i>Se déconnecter</a>\n        </li>\n    </ul>\n    \n  </div>\n</nav>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ValidateService} from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport {User } from '../../models/user.model'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user:User=new User();\n  constructor(\n              private validateService: ValidateService,\n              private flashMessage:  FlashMessagesService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n\n     this.authService.getProfile().subscribe((profile : any) => {\n      this.user = profile.user;\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n  }\n\n  updateUser(){\n    \n      if(!this.validateService.isValideUpdate(this.user)){\n       this.flashMessage.show(\"Veuillez saisir les champs\",\n         {cssClass:'alert alert-danger',timeout:5000});\n       return false;\n     }\n\n     if(!this.validateService.validateEmail(this.user.email)) {\n    this.flashMessage.show('Entrez une adresse mail valide', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n      this.authService.updateUser(this.user).subscribe((data :any) => {\n        if(data.success) {\n         this.flashMessage.show(\"Compte modifié\", {cssClass: 'alert-success', timeout: 5000});\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 5000});\n          \n        }\n    });\n\n  }\n\n}\n","<div class=\"row\">\n   <div class=\"col-md-10 mx-auto\">\n  <h2 class=\"text-center text-primary\">Modifier mon profile</h2>\n   \t  \n\t\t<form (submit)=\"updateUser()\" >\n\t\t  <div class=\"form-group\">\n\t\t    <label for=\"name\">Nom</label>\n\t\t    <input type=\"text\" [(ngModel)]=\"user.name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Entrez votre nom\">\n\t\t  </div>\n\t\t  <div class=\"form-group\">\n\t\t    <label for=\"email\">Email</label>\n\t\t    <input type=\"email\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Entrez votre email\">\n\t\t  </div>\n\n\t\t  <div class=\"row\">\n\t\t  \t<div class=\"col-md-6\">\n\t\t  \t\t <label for=\"email\">Age</label>\n\t\t    <input type=\"number\" [(ngModel)]=\"user.age\" name=\"age\" class=\"form-control\" id=\"age\"  placeholder=\"Age...\">\n\t\t  \t</div>\n\t\t  \t<div class=\"col-md-6\">\n\t\t  \t\t <label for=\"email\">Race</label>\n\t\t    <input type=\"text\" [(ngModel)]=\"user.race\" name=\"race\" class=\"form-control\" id=\"race\"  placeholder=\"Race...\">\n\t\t  \t</div>\n\t\t  </div>\n\n\t\t  <div class=\"row\">\n\t\t  \t<div class=\"col-md-6\">\n\t\t  \t\t <label for=\"email\">Famille</label>\n\t\t  \t\t<textarea name=\"family\" [(ngModel)]=\"user.family\" class=\"form-control\" placeholder=\"Famille...\"></textarea>\n\t\t  \t</div>\n\t\t  \t<div class=\"col-md-6\">\n\t\t  \t\t  <label for=\"email\">Nourriture</label>\n\t\t  \t\t<textarea name=\"food\" [(ngModel)]=\"user.food\" class=\"form-control\" placeholder=\"Nourriture...\"></textarea>\n\t\t  \t</div>\n\t\t  </div>\n\n\t\t  <div class=\"form-group mt-3\" align=\"center\">\n\t\t  \t<input type=\"submit\" class=\"btn btn-primary\" value=\"Modifier mon compte\">\n\t\t  </div>\n\t\t</form>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ValidateService} from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n \n\n  name: String;\n  email: String;\n  password: String;\n\n  constructor(private validateService: ValidateService,\n  \t          private flashMessage:  FlashMessagesService,\n  \t          private authService: AuthService,\n              private router: Router) { \n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  registerUser(){\n\n  \t const user={\n  \t \tname:this.name,\n  \t \temail:this.email,\n  \t \tpassword:this.password\n  \t };\n\n  \tif(!this.validateService.validateRegister(user)) {\n      this.flashMessage.show('Veuillez entrer tous les champs', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n \n    if(!this.validateService.validateEmail(user.email)) {\n    this.flashMessage.show('Entrez une adresse mail valide', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n     \n     this.authService.registerUser(user).subscribe((data :any) => {\n    if(data.success) {\n      this.flashMessage.show('Votre compte a été crée et vous pouvez vous connecter', {cssClass: 'alert-success', timeout: 3000});\n      this.router.navigate(['/login']);\n    } else {\n      this.flashMessage.show('Erreur lors de la creation du compte', {cssClass: 'alert-danger', timeout: 3000});\n      this.router.navigate(['/register']);\n    }\n  });\n\n\n\n  }\n\n \n\n}\n","<div class=\"row\">\n   <div class=\"col-md-8 mx-auto\">\n   \t  \n\t\t<h2 class=\"page-header text-center text-primary\">S'inscrire</h2>\n\t\t<form (submit)=\"registerUser()\" >\n\t\t  <div class=\"form-group\">\n\t\t    <label for=\"name\">Nom</label>\n\t\t    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Entrez votre nom\">\n\t\t  </div>\n\t\t  <div class=\"form-group\">\n\t\t    <label for=\"email\">Email</label>\n\t\t    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Entrez votre email\">\n\t\t  </div>\n\t\t  <div class=\"form-group\">\n\t\t    <label for=\"password\">Mot de passe</label>\n\t\t    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Entrez le mot de passe\">\n\t\t  </div>\n\t\t  <input type=\"submit\" class=\"btn btn-primary\" value=\"Creer mon compte\">\n\t\t</form>\n   </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard{\r\n\r\n   constructor(private authService: AuthService,private route:Router)\r\n   {\r\n\r\n   }\r\n\r\n   canActivate(){\r\n\r\n   \tif(this.authService.isLoggedIn()){\r\n        return true;\r\n   \t}else{\r\n        \r\n        this.route.navigate(['login']);\r\n        return false;\r\n   \t}\r\n\r\n   }\r\n}","export class User{\r\n\t_id?:string;\r\n\tname:string;\r\n\temail:string;\r\n\tpassword:string;\r\n\tfamily?:string;\r\n\tage?:number;\r\n\trace?:string;\r\n\tfood?:string;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\n// import { map } from 'rxjs/operators';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n   readonly ROOT_URL;\n   authToken:any;\n   user:any;\n\n  constructor(private http:HttpClient) {\n  \t// this.ROOT_URL=\"http://localhost:8080/api/users\";\n    this.ROOT_URL=\"api/users\";\n   }\n\n   registerUser(user) {\n\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(`${this.ROOT_URL}/register`, user, {headers: headers});\n\n  }\n\n  authenticateUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(`${this.ROOT_URL}/authenticate`, user, {headers: headers});\n   \n   }\n\n   updateUser(user){\n\n     let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put(`${this.ROOT_URL}/update-profile`, user, {headers: headers});\n   }\n\n   storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n    return token;\n  }\n\n\n\n\n\n  getProfile() {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n     \n    return this.http.get(`${this.ROOT_URL}/profile`, {headers: headers});\n   \n  }\n\n   getAllUsers(){\n    \n\n     let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n     \n    return this.http.get(`${this.ROOT_URL}/all-users`, {headers: headers});\n  }\n\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  isLoggedIn() {\n    const helper = new JwtHelperService();\n    this.loadToken();\n    \n    if(this.authToken==null)return false;\n    return !helper.isTokenExpired(this.authToken.replace(\"JWT \", \"\"));\n  \n  }\n\n  getUsername(){\n    return JSON.parse(localStorage.getItem('user'));\n    \n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FriendService {\n\n  readonly ROOT_URL;\n \n  constructor(private http:HttpClient) {\n  \t// this.ROOT_URL=\"http://localhost:8080/api/friends\";\n    this.ROOT_URL=\"api/friends\";\n   }\n\n  addFriend(friend) {\n\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(`${this.ROOT_URL}/add-friend`, friend, {headers: headers});\n\n  }\n\n\n\n   getAllMyFriends(){\n    \n\n     let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n     \n    return this.http.get(`${this.ROOT_URL}/all-my-friends`, {headers: headers});\n  }\n\n  deleteFriend(friend){\n\n     let headers = new HttpHeaders();\n     headers.append('Content-Type', 'application/json');\n     return this.http.delete(`${this.ROOT_URL}/delete-friend/${friend._id}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport {HttpRequest,HttpHandler,HttpEvent,HttpInterceptor} from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(public auth: AuthService) {}\r\n  \r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    \r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `${this.auth.loadToken()}`\r\n      }\r\n    });\r\n    return next.handle(request);\r\n  }\r\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if(user.name == undefined || user.email == undefined  || user.password == undefined) {\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  isValidLogin(user:any){\n    if(user.email==undefined || user.password==undefined)\n    {\n      return false;\n    }else{\n      return true;\n    }\n  }\n  isValideUpdate(user){\n\n    if (user.name == undefined || user.email == undefined || user.age==undefined\n      || user.race==undefined || user.food==undefined || user.family==undefined) {\n        \n        return false;\n    }else{\n      return true;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}